pipeline {
    agent any

    tools {
        maven 'mvn'
    }

    stages {
        stage('Checkout Source Code from Git Repository') {
            steps {
                script {
                    echo 'Fetching the latest source code from the Git repository...'
                }
                git branch: 'main',
                    credentialsId: '8f1de731-7401-44dd-aa00-21e55ee42ab9',
                    url: 'https://github.com/YassineOularbi/FILL-ROUGE-TAILORING-ONLINE.git'
            }
        }

        stage('Maven Build for MicroServices TAILORING ONLINE') {
            parallel {
                script {
                    def microservices = [
                        'config-server',
                        'eureka-server',
                        'api-gateway-service',
                        'user-management-service',
                        'store-management-service',
                        'localization-shipping-service',
                        'loyalty-program-service',
                        'notification-mailing-service',
                        'order-management-service',
                        'payment-banking-service',
                        'promotion-management-service',
                        'review-management-service',
                        'social-management-service'
                    ]

                    microservices.each { service ->
                        stage("Build ${service.capitalize()}") {
                            parallel {
                                stage("Clean ${service.capitalize()}") {
                                    steps {
                                        script {
                                            echo "Cleaning project ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn clean'
                                        }
                                    }
                                }
                                stage("Resolve Dependencies for ${service.capitalize()}") {
                                    steps {
                                        script {
                                            echo "Resolving dependencies for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn dependency:resolve'
                                        }
                                    }
                                }
                                stage("Validate ${service.capitalize()} Configuration") {
                                    steps {
                                        script {
                                            echo "Validating configuration for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn validate'
                                        }
                                    }
                                }
                                stage("Compile ${service.capitalize()} Application") {
                                    steps {
                                        script {
                                            echo "Compiling the application for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn clean compile'
                                        }
                                    }
                                }
                                stage("Compile Test Classes for ${service.capitalize()}") {
                                    steps {
                                        script {
                                            echo "Compiling test classes for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn test-compile'
                                        }
                                    }
                                }
                                if (!service.contains('config-server') && !service.contains('eureka-server') && !service.contains('api-gateway-service')) {
                                    stage("Execute Unit Tests for ${service.capitalize()}") {
                                        steps {
                                            script {
                                                echo "Executing unit tests for ${service}..."
                                            }
                                            dir("tailoring-online-services/${service}") {
                                                sh 'mvn test'
                                            }
                                        }
                                    }
                                }
                                stage("Run Integration Tests for ${service.capitalize()}") {
                                    steps {
                                        script {
                                            echo "Executing integration tests for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn integration-test'
                                        }
                                    }
                                }
                                stage("Perform Verification for ${service.capitalize()}") {
                                    steps {
                                        script {
                                            echo "Verifying ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn verify'
                                        }
                                    }
                                }
                                stage("Package ${service.capitalize()} Application") {
                                    steps {
                                        script {
                                            echo "Packaging the application for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn package'
                                        }
                                    }
                                }
                                stage("Install Package for ${service.capitalize()}") {
                                    steps {
                                        script {
                                            echo "Installing package for ${service}..."
                                        }
                                        dir("tailoring-online-services/${service}") {
                                            sh 'mvn install'
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Cleaning up the workspace after the build...'
            }
            cleanWs()
        }
        success {
            script {
                echo 'Pipeline completed successfully. All stages passed.'
            }
        }
        failure {
            script {
                echo 'Pipeline failed. Please check the logs for details.'
            }
        }
    }
}
