server:
  port: ${SERVER_PORT}
spring:
  aop:
    proxy-target-class: ${SPRING_AOP_PROXY_TARGET_CLASS}
  cloud:
    loadbalancer:
      ribbon:
        enabled: ${SPRING_CLOUD_LOADBALANCER_RIBBON_ENABLED}
    config:
      server:
        git:
          uri: ${SPRING_CONFIG_SERVER_GIT_URI}
          default-label: ${SPRING_CONFIG_SERVER_GIT_DEFAULT_LABEL}
          clone-on-start: ${SPRING_CONFIG_SERVER_GIT_CLONE_ON_START}
          username: ${SPRING_CONFIG_SERVER_GIT_USERNAME}
          password: ${SPRING_CONFIG_SERVER_GIT_PASSWORD}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}
      client:
        registration:
          config:
            provider: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CONFIG_PROVIDER}
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CONFIG_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CONFIG_CLIENT_SECRET}
            authorization-grant-type: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CONFIG_AUTHORIZATION_GRANT_TYPE}
            scope: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_CONFIG_SCOPE}
        provider:
          keycloak:
            issuer-uri: ${SPRING_SECURITY_OAUTH2_PROVIDER_KEYCLOAK_ISSUER_URI}
oauth2:
  resource-access-key: ${OAUTH2_RESOURCE_ACCESS_KEY}
  client-id: ${OAUTH2_CLIENT_ID}
  roles-key: ${OAUTH2_ROLES_KEY}
  logout-success-url: ${OAUTH2_LOGOUT_SUCCESS_URL}
  logout-url: ${OAUTH2_LOGOUT_URL}
  allowed-roles: ${OAUTH2_ALLOWED_ROLES}
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
    registerWithEureka: ${EUREKA_CLIENT_REGISTERWITHEUREKA}
    fetchRegistry: ${EUREKA_CLIENT_FETCHREGISTRY}
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS}
  oauth2:
    client: ${EUREKA_OAUTH2_CLIENT}
    client-id: ${EUREKA_OAUTH2_CLIENT_ID}
    client-secret: ${EUREKA_OAUTH2_CLIENT_SECRET}
    token-uri: ${EUREKA_OAUTH2_TOKEN_URI}
